require 'rubygems'
require 'rubygems/package_task'
require 'rspec/core'
require 'rspec/core/rake_task'

def generate_gemspec
  require 'bundler'

  local_groups=[:guard]
  development_groups=[:development, :test]
  runtime_groups=Bundler.definition.groups - development_groups - local_groups

  require File.join(File.dirname(__FILE__), 'lib/riak/version')

  spec = Gem::Specification.new do |gem|
    # Meta
    gem.name = "riak-client"
    gem.version = Riak::VERSION
    gem.summary = %Q{riak-client is a rich client for Riak, the distributed database by Basho.}
    gem.description = %Q{riak-client is a rich client for Riak, the distributed database by Basho. It supports the full HTTP and Protocol Buffers interfaces including storage operations, bucket configuration, link-walking, secondary indexes and map-reduce.}
    gem.email = ["sean@basho.com"]
    gem.homepage = "http://github.com/basho/riak-ruby-client"
    gem.authors = ["Sean Cribbs"]

    # Deps
    Bundler.load.dependencies_for(*Bundler.definition.groups).each do |dep|
      runtime_resolved = Bundler.definition.specs_for(runtime_groups).select { |spec| spec.name == dep.name }.first
      development_resolved = Bundler.definition.specs_for(development_groups).select { |spec| spec.name == dep.name }.first
      if(!runtime_resolved.nil?)
        gem.add_dependency(dep.name, dep.requirement)
      end
      if(!development_resolved.nil?)
        gem.add_development_dependency(dep.name, dep.requirement)
      end
    end

    # Files
    gem.files = `git ls-files -- .`.split("\n").reject do |fn|
      fn =~ /^Gemfile.*$/ ||
      fn =~ /^Guardfile$/ ||
      fn =~ /^Rakefile$/ ||
      fn =~ /^\..*$/ ||
      fn =~ /^spec\/.*$/
    end.sort
    # gem.test_files = `git ls-files -- .`.split("\n").select do |fn|
    #   fn =~ /^spec\/.*$/
    # end.sort
    # gem.executables = `git ls-files -- bin/*`.split("\n").map{ |f| File.basename(f) }
    gem.require_paths = ['lib']
  end
  File.open("riak-client.gemspec", "wb") do |fh|
    fh.write("# This file is auto-generated!\n")
    fh.write("# DO NOT EDIT THIS FILE DIRECTLY!\n")
    fh.write("# Instead, edit the Rakefile and run 'rake gemspec:generate'.")
    fh.write(spec.to_ruby)
  end

  return spec
end

def gemspec
  $riakclient_gemspec ||= generate_gemspec
end

Gem::PackageTask.new(gemspec) do |pkg|
  pkg.need_zip = false
  pkg.need_tar = false
end

task :gem => :gemspec

desc %{Validate the gemspec file.}
task :gemspec do
  gemspec.validate
end

desc %{Release the gem to RubyGems.org}
task :release => :gem do
  system "gem push pkg/#{gemspec.name}-#{gemspec.version}.gem"
end

desc "Cleans up white space in source files"
task :clean_whitespace do
  no_file_cleaned = true

  Dir["**/*.rb"].each do |file|
    contents = File.read(file)
    cleaned_contents = contents.gsub(/([ \t]+)$/, '')
    unless cleaned_contents == contents
      no_file_cleaned = false
      puts " - Cleaned #{file}"
      File.open(file, 'w') { |f| f.write(cleaned_contents) }
    end
  end

  if no_file_cleaned
    puts "No files with trailing whitespace found"
  end
end

desc "Run Unit Specs Only"
RSpec::Core::RakeTask.new(:spec) do |spec|
  spec.rspec_opts = %w[--profile --tag ~integration --tag ~slow]
end

namespace :spec do
  desc "Run Integration Specs Only (without explicitly slow specs)"
  RSpec::Core::RakeTask.new(:integration) do |spec|
    spec.rspec_opts = %w[--profile --tag '~slow' --tag integration]
  end

  desc "Run All Specs (without explicitly slow specs)"
  RSpec::Core::RakeTask.new(:all) do |spec|
    spec.rspec_opts = %w[--profile --tag '~slow']
  end

  desc "Run Slow Specs Only"
  RSpec::Core::RakeTask.new(:slow) do |spec|
    spec.rspec_opts = %w[--profile --tag slow]
  end
end

desc "Run All Specs (including slow specs)"
RSpec::Core::RakeTask.new(:ci) do |spec|
  spec.rspec_opts = %w[--profile]
end

task :default => :ci
